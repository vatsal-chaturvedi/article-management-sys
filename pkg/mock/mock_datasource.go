// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/vatsal-chaturvedi/article-management-sys/internal/repo/datasource (interfaces: DataSourceI)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/vatsal-chaturvedi/article-management-sys/internal/model"
)

// MockDataSourceI is a mock of DataSourceI interface.
type MockDataSourceI struct {
	ctrl     *gomock.Controller
	recorder *MockDataSourceIMockRecorder
}

// MockDataSourceIMockRecorder is the mock recorder for MockDataSourceI.
type MockDataSourceIMockRecorder struct {
	mock *MockDataSourceI
}

// NewMockDataSourceI creates a new mock instance.
func NewMockDataSourceI(ctrl *gomock.Controller) *MockDataSourceI {
	mock := &MockDataSourceI{ctrl: ctrl}
	mock.recorder = &MockDataSourceIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDataSourceI) EXPECT() *MockDataSourceIMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockDataSourceI) Get(arg0 map[string]interface{}, arg1, arg2 int) ([]model.ArticleDs, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2)
	ret0, _ := ret[0].([]model.ArticleDs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockDataSourceIMockRecorder) Get(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockDataSourceI)(nil).Get), arg0, arg1, arg2)
}

// Insert mocks base method.
func (m *MockDataSourceI) Insert(arg0 model.ArticleDs) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Insert indicates an expected call of Insert.
func (mr *MockDataSourceIMockRecorder) Insert(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockDataSourceI)(nil).Insert), arg0)
}
